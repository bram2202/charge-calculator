name: Test

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting (if configured)
        run: npm run lint --if-present

      - name: Run TypeScript type checking
        run: npm run type-check

      - name: Run tests
        run: npm test

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Build application
        run: npm run build

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-node-20
          path: |
            coverage/
            test-results/
          retention-days: 30

  # Security and dependency checks
  security:
    runs-on: ubuntu-latest
    continue-on-error: true
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for outdated dependencies
        run: npm outdated || true

  # Performance and smoke tests
  smoke-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start dev server (background)
        run: npm run dev &
        env:
          CI: true

      - name: Wait for server to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:5173 > /dev/null 2>&1; do sleep 1; done' || echo "Server not ready"

      - name: Run smoke test
        run: |
          curl -f http://localhost:5173 || echo "Smoke test failed"
          echo "Basic smoke test completed"
